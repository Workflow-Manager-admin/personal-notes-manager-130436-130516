{"is_source_file": true, "format": "Python", "description": "Test cases for API endpoints of a Django REST Framework application, including health check, user authentication, and CRUD operations for notes.", "external_files": ["rest_framework.test.APITestCase", "django.urls.reverse", "django.contrib.auth.models.User"], "external_methods": ["rest_framework.test.APITestCase", "django.urls.reverse", "django.contrib.auth.models.User.objects.create_user", "self.client.post", "self.client.get", "self.client.put", "self.client.delete", "self.client.login"], "published": ["HealthTests", "AuthTests", "NoteApiTests"], "classes": [{"name": "HealthTests", "description": "Tests the health check endpoint to verify server status."}, {"name": "AuthTests", "description": "Tests user registration, login, and logout functionalities."}, {"name": "NoteApiTests", "description": "Tests CRUD operations and search functionality for notes API."}], "methods": [{"name": "test_health(self)", "description": "Verifies the server health endpoint returns status 200 and expected message.", "scope": "HealthTests", "scopeKind": "class"}, {"name": "test_register_login_logout(self)", "description": "Tests user registration, login, and logout flows, including response codes and messages.", "scope": "AuthTests", "scopeKind": "class"}, {"name": "setUp(self)", "description": "Creates a user and logs in before each test in NoteApiTests.", "scope": "NoteApiTests", "scopeKind": "class"}, {"name": "test_note_crud_and_search(self)", "description": "Performs create, read, update, delete, and search operations on notes, verifying responses and data consistency.", "scope": "NoteApiTests", "scopeKind": "class"}], "calls": ["reverse('Health')", "self.client.get(url)", "self.client.post(reg_url, payload)", "self.client.post(login_url, {...})", "self.client.login(username, password)", "self.client.post(logout_url)"], "search-terms": ["API test cases", "Django REST Framework", "auth tests", "notes CRUD", "search notes", "status code assertions", "user session"], "state": 2, "file_id": 20, "knowledge_revision": 46, "git_revision": "299009103a7901b8b1c5ef83b2f1dbc48f34f0d8", "ctags": [{"_type": "tag", "name": "AuthTests", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^class AuthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteApiTests", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^class NoteApiTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^    def setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "NoteApiTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_note_crud_and_search", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^    def test_note_crud_and_search(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "NoteApiTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_register_login_logout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-130436-130516/notes_backend/api/tests.py", "pattern": "/^    def test_register_login_logout(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "AuthTests", "scopeKind": "class"}], "hash": "0cbe34055b2b7661a19846302012317c", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/api/tests.py", "revision_history": [{"46": "299009103a7901b8b1c5ef83b2f1dbc48f34f0d8"}]}